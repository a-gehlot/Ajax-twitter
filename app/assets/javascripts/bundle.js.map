{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA,2BAA2B,GAAG;AAC9B;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA,2BAA2B,GAAG;AAC9B;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;;AAEA;;;;;;;;;;AC7CA,gBAAgB,mBAAO,CAAC,0CAAY;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;;;;;;;;;;ACtDA,gBAAgB,mBAAO,CAAC,0CAAY;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gDAAgD,WAAW,GAAG,iBAAiB;AAC/E,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B,sBAAsB;AACnD;;AAEA;AACA;AACA,iCAAiC,YAAY;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;AClEA,gBAAgB,mBAAO,CAAC,0CAAY;AACpC,qBAAqB,mBAAO,CAAC,oDAAiB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,8CAA8C,QAAQ,GAAG,cAAc;AACvE;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;;AAEA;;;;;;UCjCA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA,qBAAqB,mBAAO,CAAC,oDAAiB;AAC9C,oBAAoB,mBAAO,CAAC,kDAAgB;AAC5C,qBAAqB,mBAAO,CAAC,oDAAiB;;AAE9C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,CAAC,C","sources":["./frontend/api_util.js","./frontend/follow_toggle.js","./frontend/tweet_compose.js","./frontend/users_search.js","webpack/bootstrap","./frontend/twitter.js"],"sourcesContent":["const APIUtil = {\n    followUser: (id) => {\n        return ($.ajax({\n            type: \"POST\",\n            url: `/users/${id}/follow`,\n            dataType: \"json\",\n        }));\n    },\n\n    unfollowUser: (id) => {\n        return ($.ajax({\n            type: \"DELETE\",\n            url: `/users/${id}/follow`,\n            dataType: \"json\",\n        }));\n    },\n\n    searchUsers: (query) => {\n        return ($.ajax({\n            type: \"GET\",\n            url: \"/users/search\",\n            dataType: \"json\",\n            data: { query },\n        }));\n    },\n\n    createTweet: (data) => {\n        return ($.ajax({\n            type: \"POST\",\n            url: \"/tweets\",\n            dataType: \"json\",\n            data: data\n        }));\n    },\n\n    addUserMentions: (data) => {\n        return ($.ajax({\n            type: \"GET\",\n            url: \"/users\",\n            dataType: \"json\",\n            data: { data }\n        }))\n    }\n}\n\nmodule.exports = APIUtil;","const APIUtil = require(\"./api_util\");\n\nclass FollowToggle {\n    constructor(el, options) {\n        this.$el = $(el);\n        this.userID = this.$el.data('user-id') || options.userId;\n        this.followState = this.$el.data('follow-state') || options.followState;\n        this.render();\n        this.$el.click(this.handleClick.bind(this))\n    }\n\n    render() {\n        let expr = this.followState;\n        switch (expr) {\n            case 'unfollowed':\n                this.$el.text(\"Follow\");\n                this.$el.prop(\"disabled\", false);\n                break;\n            case 'followed':\n                this.$el.text(\"Unfollow\");\n                this.$el.prop(\"disabled\", false);\n                break;\n            case 'following':\n                this.$el.text(\"Following...\");\n                this.$el.prop(\"disabled\", true);\n                break;\n            case 'unfollowing':\n                this.$el.text(\"Unfollowing...\");\n                this.$el.prop(\"disabled\", true);\n                break;\n        }\n    }\n\n    handleClick(event) {\n        // const followToggle = this;\n        event.preventDefault();\n        if (this.followState === \"unfollowed\") {\n            this.followState = \"following\"\n            this.render()\n            APIUtil.followUser(this.userID).then(() => {\n                this.followState = \"followed\";\n                this.render();\n            })\n        } else {\n            this.followState = \"unfollowing\"\n            this.render()\n            APIUtil.unfollowUser(this.userID).then(() => {\n                this.followState = \"unfollowed\";\n                this.render();\n            })\n        }\n    }\n}\n\nmodule.exports = FollowToggle;","const APIUtil = require(\"./api_util\");\n\nclass TweetCompose {\n    constructor (el) {\n        this.$el = $(el);\n        this.$el.find('input').on('click', this.submit.bind(this))\n        this.$textArea = this.$el.find(\"textarea\")\n        this.$textArea.on(\"input\", this.updateChars.bind(this));\n        this.$removeUser = this.$el.find(\".new-mentions\")\n        this.$removeUser.on(\"click\", this.removeMentionedUser.bind(this))\n        this.$newMentionButton = this.$el.find(\".add_mention\")\n        this.$newMentionButton.on(\"click\", this.newUserSelect.bind(this))\n    }\n\n    submit(event) {\n        event.preventDefault();\n        let data = this.$el.serializeJSON()\n        console.log(data);\n        this.clearInput();\n        this.$el.find(\":input\").prop(\"disabled\", true);\n        APIUtil.createTweet(data).then((tweet) => this.handleSuccess(tweet));\n    }\n\n    newUserSelect(event) {\n        event.preventDefault();\n        APIUtil.addUserMentions().then((data) => this.addMention(data))\n    }\n\n    addMention (data) {\n        let outerDiv = $('<div class=\"mentions\"</div>')\n        let mentionDrop = $('<select name=\"tweet[mentioned_user_ids][]\"></select>')\n        let removeMention = $('<button class=\"remove_mention\">Remove Mention</button>')\n        data.forEach(element => {\n            mentionDrop.append(`<option value=${element.id}>${element.username}</option>`)\n        });\n        outerDiv.append(mentionDrop);\n        outerDiv.append(removeMention);\n        this.$el.find('.new-mentions').append(outerDiv);\n\n    }\n\n    clearInput() {\n        this.$el.find('[name^=tweet]').val('');\n        this.$el.find('.mentions').remove();\n    }\n\n    handleSuccess(tweet) {\n        this.clearInput();\n        this.$el.find(\":input\").prop(\"disabled\", false);\n        let ul = this.$el.data(\"tweets-ul\");\n        $(ul).prepend(`<li>${JSON.stringify(tweet)}</li>`)\n    }\n\n    updateChars() {\n        let remainChar = (140 - this.$textArea.val().length);\n        $(\".chars-left\").text(`${remainChar} characters remaining`);\n    }\n\n    removeMentionedUser(event) {\n        event.preventDefault();\n        if ($(event.target).hasClass(\"remove_mention\")) {\n            $(event.target).closest('div').remove()\n        }\n    }\n}\n\nmodule.exports = TweetCompose;","const APIUtil = require(\"./api_util\");\nconst FollowToggle = require(\"./follow_toggle\");\n\nclass UsersSearch {\n    constructor(el) {\n        this.$el = $(el);\n        this.$input = this.$el.find(\"input\")\n        this.$ul = this.$el.find(\"ul\")\n        this.$input.on(\"input\", this.handleInput.bind(this));\n    }\n\n    handleInput() {\n        APIUtil.searchUsers(this.$input.val()).then((users) => {\n            this.renderData(users);\n        })\n    }\n\n    renderData(data) {\n        let userTable = this.$el.find('ul.users');\n        userTable.empty();\n        data.forEach((user) => {\n            let userAnchor = $(`<li><a href=${user.id}>${user.username}</a></li>`)\n            let button = $('<button></button>')\n            new FollowToggle(button, {\n                userId: user.id,\n                followState: user.followed ? 'followed' : 'unfollowed',\n            });\n            userTable.append(userAnchor);\n            userTable.append(button);\n        })\n    }\n}\n\nmodule.exports = UsersSearch;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const FollowToggle = require('./follow_toggle');\nconst UsersSearch = require('./users_search');\nconst TweetCompose = require('./tweet_compose')\n\n$(document).ready(function() {\n    $(\"button.follow-toggle\").each(function(idx, element) {\n        new FollowToggle(element);\n    })\n    $(\"nav.users-search\").each(function(idx, element) {\n        new UsersSearch(element);\n    })\n    $(\"form.tweet-compose\").each(function(idx, element) {\n        new TweetCompose(element);\n    })\n})"],"names":[],"sourceRoot":""}